---
title: "TakeHomeEx3"
author: "Lin Lin"
---

## Objective definition:

FishEye International, a non-profit focused on countering illegal, unreported, and unregulated (IUU) fishing, has been given access to an international finance corporation's database on fishing related companies. In the past, **FishEye has determined that companies with anomalous structures are far more likely to be involved in IUU** (or other "fishy" business). FishEye has transformed the database into a knowledge graph. It includes information **about companies, owners, workers, and financial status.** FishEye is aiming to use this graph to identify anomalies that could indicate a company is involved in IUU.

FishEye analysts have attempted to use **traditional node-link visualizations and standard graph analyses, but these were found to be ineffective because the scale and detail in the data can obscure a business's true structure.** The research below aim to **help FishEye develop a new visual analytics approach to better understand fishing business anomalies**.

We will use visual analytics to understand patterns of groups in the knowledge graph and highlight anomalous groups.

Task 1: Use visual analytics to identify anomalies in the **business groups** present in the knowledge graph.

Task 2: Develop a visual analytics process to find similar businesses and group them. This analysis should focus on a business's most important features and present those features clearly to the user.

```{r background information}
  #The grouping will be done visually
  #we need to find groups and business groups, we have to do a bit of text sensing
```

## Data Pre-processing

Load the library and read the json relationship file MC2.

```{r loadData}
  #echo | false
  #tidytext -- text mining library with R: https://cran.r-project.org/web/packages/tidytext/vignettes/tidytext.html
  #Load Libraries   
  pacman::p_load(jsonlite,tidygraph, ggraph, visNetwork, tidyverse, shiny, plotly, graphlayouts, ggforce, tidytext)   
  #load Data   
  MC3<- fromJSON("data/MC3.json")
```

Pick desired fields in MC3

We picked the desired fields and reorganized the columns **using select function.** The nodes in MC3 will be companies or person, and description about companies, with their product and services, country and revenue generated.

As we load the data, we found this diagram is not directed, so we will not know the in/out direction of connection. We will take out the nodes and edges out for further processing.

```{r dataCleaning}

  #glimpse(MC3)

  MC3_nodes <- as_tibble(MC3$nodes) 
  unique(MC3_nodes$type)
  colSums(is.na(MC3_nodes))
    
  MC3_edges <- as_tibble(MC3$links) %>%
  select (source,target,type) %>%
  distinct()
  unique(MC3_edges$type)
  colSums(is.na(MC3_edges))
```

With the loaded data MC3_edges, the data is loaded as list rather than a data frame format. Mutate and rearrange the data to data frame

```{r tidyData}
  MC3_edges_clean <- MC3_edges %>% mutate(source = as.character(source),
                       target = as.character(target),
                       type = as.character(target)) %>%
  group_by(source, target, type) %>%
  summarise(weights = n()) %>%
  filter(source!=target) %>%
  ungroup()

  MC3_nodes_clean <- MC3_nodes %>% mutate(country = as.character(country),
                                          id = as.character(id),
                                          product_services = as.character(product_services),
                                          revenue_omu = as.numeric(as.character(revenue_omu)),    #we need to convert to numeric directly
                                          type = as.character(type)) %>%
    select(id, country, type, revenue_omu, product_services)
  
```

Handling missing values: for some or the product/services, there's blank value such as "character(0)", **we recode these value to NA these value before pass them for text sensing**.:

![](images/Issue%20in%20data.JPG)

In order to find the business group, we will check the type of different category of data. There might be owner - business, customer - business, business - business relationship

```{r}
```

### Text sensing with tidytext

#### word count

```{r simpleWordCount}
  #start a bit of text sensing
  MC3_nodes_clean 
```

### Tokenisation

```{r tokenization}
  tidy_nodes <- MC3_nodes_clean %>%
  unnest_tokens (word, product_services)
  #can add in to_lower = TRUE
  # add in strip_punct = TRUE
```

from the token generated, we need to take out the common/generic words.

```{r stopwordsRemove}
  tidy_stopwords <- tidy_nodes %>%
  anti_join(stop_words)
```

### Visualization with bar chart

```{r}
    
```

```{r parallelcordinate}
    #use parallel cordinate to visualize

  # library(cluster)
  # library(caret)
  # 
  # MC3_nodes <- MC3_nodes %>%
  # select(product_services, country, revenue_omu, type) %>%
  # na.omit()
  # 
  # 
  # 
  # #prepare data
  # clustering_data <- MC3_nodes[, c("product_services", "revenue_omu", "type")]
  # #try K means clustering
  # k <- 4  # Number of clusters
  # set.seed(123)  # For reproducibility
  # kmeans_result <- kmeans(clustering_data, centers = k)
  # 
  # MC3_nodes$cluster <- as.factor(kmeans_result$cluster)
  # cluster_summary <- aggregate(clustering_data, by = list(cluster = MC3_nodes$cluster), FUN = mean)
  # 
  # 
  # 
  # pacman::p_load(GGally, parallelPlot)
  # library(GGally)
  # ggparcoord(MC3_nodes[, c("product_services", "country", "revenue_omu", "type","cluster")], 
  #          columns = 1:3, groupColumn = "cluster", 
  #          title = "Parallel Coordinate Plot: Features by Cluster")
  # 
  
```

## ploting relationship?

TODO - failed need troubleshoot

```{r graphobject}
  # GraphMC3 <- tbl_graph(nodes = MC3_nodes_clean,
  #                       edges = MC3_edges_clean,
  #                          directed = FALSE)
  # #
  # GraphMC3
  #is_connected <- is.connected(GraphMC2)
  
  # peopleEntityRelationship %>%
  # activate(edges) %>%
  # arrange(desc(weightkg))
```
